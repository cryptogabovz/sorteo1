<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/admin.css">
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="/admin/dashboard">游늵 Dashboard</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto">
                    <li class="nav-item">
                        <a class="nav-link active" href="/admin/dashboard">Dashboard</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/admin/participants">Participantes</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/admin/configuracion">Configuraci칩n</a>
                    </li>
                </ul>
                <ul class="navbar-nav">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <%= adminUsername || 'Admin' %>
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <li><a class="dropdown-item" href="/admin/dashboard">Dashboard</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li>
                                <form method="POST" action="/admin/logout" class="d-inline">
                                    <button type="submit" class="dropdown-item">Cerrar Sesi칩n</button>
                                </form>
                            </li>
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container-fluid mt-4">
        <div class="row">
            <!-- Sidebar -->
            <div class="col-md-3">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">游늳 Estad칤sticas</h5>
                    </div>
                    <div class="card-body">
                        <div class="metric-item">
                            <div class="metric-value" id="totalParticipants"><%= stats.total_participants %></div>
                            <div class="metric-label">Total Participantes</div>
                        </div>
                        <div class="metric-item">
                            <div class="metric-value text-success" id="validatedTickets"><%= stats.validated_tickets %></div>
                            <div class="metric-label">Tickets Validados</div>
                        </div>
                        <div class="metric-item">
                            <div class="metric-value text-danger" id="rejectedTickets"><%= stats.rejected_tickets %></div>
                            <div class="metric-label">Tickets Rechazados</div>
                        </div>
                        <div class="metric-item">
                            <div class="metric-value text-info" id="provinces"><%= stats.provinces_count %></div>
                            <div class="metric-label">Provincias</div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Main Content -->
            <div class="col-md-9">
                <!-- Gr치fico de Participantes Diarios -->
                <div class="row mb-4">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h5 class="mb-0">游늵 Participantes Diarios</h5>
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-outline-primary btn-sm active" onclick="changeDays(7)">7 d칤as</button>
                                    <button type="button" class="btn btn-outline-primary btn-sm" onclick="changeDays(15)">15 d칤as</button>
                                    <button type="button" class="btn btn-outline-primary btn-sm" onclick="changeDays(30)">30 d칤as</button>
                                </div>
                            </div>
                            <div class="card-body">
                                <div id="chart-container" style="width: 100%; height: 400px;"></div>
                                <div class="mt-3 text-center">
                                    <small class="text-muted">
                                        Gr치fico de participantes registrados por d칤a
                                    </small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                
                                <!-- Error message -->
                                <% if (typeof error !== 'undefined' && error) { %>
                                    <div class="alert alert-danger mt-3">
                                        <%= error %>
                                    </div>
                                <% } %>
                            </div>
                        </div>
                    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/@mui/x-charts@7.0.0/umd/index.js"></script>
    <script src="/js/admin-dashboard.js"></script>

    <script>
        // Datos del gr치fico
        const dailyMetrics = <%- JSON.stringify(dailyMetrics || []) %>;
        let currentDays = 7;

        console.log('Datos del gr치fico:', dailyMetrics);

        // Funci칩n para preparar datos del gr치fico
        function prepareChartData(data, days) {
            if (!data || data.length === 0) {
                // Crear datos vac칤os para los 칰ltimos d칤as
                const emptyData = [];
                const emptyLabels = [];
                for (let i = days - 1; i >= 0; i--) {
                    const date = new Date();
                    date.setDate(date.getDate() - i);
                    emptyLabels.push(date.toLocaleDateString('es-ES', {
                        day: '2-digit',
                        month: '2-digit'
                    }));
                    emptyData.push(0);
                }
                return { labels: emptyLabels, data: emptyData };
            }

            // Preparar datos reales
            const labels = data.map(item => {
                const date = new Date(item.date + 'T00:00:00');
                return date.toLocaleDateString('es-ES', {
                    day: '2-digit',
                    month: '2-digit'
                });
            });

            const chartData = data.map(item => parseInt(item.participants_count) || 0);

            return { labels, data: chartData };
        }

        // Componente React para el gr치fico
        function DailyChart({ data, days }) {
            const chartData = prepareChartData(data, days);
            console.log('Renderizando gr치fico con:', chartData);

            return React.createElement(mui.xCharts.BarChart, {
                xAxis: [{
                    scaleType: 'band',
                    data: chartData.labels,
                    categoryGapRatio: 0.3,
                    barGapRatio: 0.1,
                }],
                series: [{
                    data: chartData.data,
                    label: 'Participantes Registrados',
                    color: '#007bff'
                }],
                width: 800,
                height: 400,
                margin: { top: 20, right: 30, bottom: 40, left: 60 },
                grid: { vertical: true, horizontal: true },
                tooltip: {
                    trigger: 'axis'
                }
            });
        }

        // Componente principal de la app
        function App() {
            const [chartData, setChartData] = React.useState(dailyMetrics);
            const [days, setDays] = React.useState(currentDays);

            const handleDaysChange = async (newDays) => {
                setDays(newDays);
                currentDays = newDays;

                // Actualizar botones activos
                document.querySelectorAll('.btn-group .btn').forEach(btn => {
                    btn.classList.remove('active');
                });
                event.target.classList.add('active');

                try {
                    const response = await fetch(`/admin/api/daily-metrics?days=${newDays}`);
                    const result = await response.json();

                    if (result.success) {
                        setChartData(result.data);
                    } else {
                        console.error('Error cargando m칠tricas:', result.message);
                    }
                } catch (error) {
                    console.error('Error:', error);
                }
            };

            return React.createElement('div', null,
                React.createElement(DailyChart, { data: chartData, days: days })
            );
        }

        // Renderizar la app React
        document.addEventListener('DOMContentLoaded', function() {
            const container = document.getElementById('chart-container');
            if (container) {
                ReactDOM.render(React.createElement(App), container);
            } else {
                console.error('Contenedor del gr치fico no encontrado');
            }
        });

        // Funci칩n global para cambiar d칤as (llamada desde botones HTML)
        window.changeDays = async function(days) {
            currentDays = days;

            // Actualizar botones activos
            document.querySelectorAll('.btn-group .btn').forEach(btn => {
                btn.classList.remove('active');
            });
            event.target.classList.add('active');

            try {
                const response = await fetch(`/admin/api/daily-metrics?days=${days}`);
                const result = await response.json();

                if (result.success) {
                    // Re-renderizar el gr치fico con nuevos datos
                    const container = document.getElementById('chart-container');
                    if (container) {
                        ReactDOM.render(
                            React.createElement(DailyChart, { data: result.data, days: days }),
                            container
                        );
                    }
                } else {
                    console.error('Error cargando m칠tricas:', result.message);
                }
            } catch (error) {
                console.error('Error:', error);
            }
        };
    </script>
</body>
</html>